"""now

Revision ID: fe52ce8e107d
Revises: 6ff6c737182d
Create Date: 2024-01-16 08:42:31.102417

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fe52ce8e107d'
down_revision = '6ff6c737182d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('credit')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product',
    sa.Column('product_id', sa.INTEGER(), nullable=False),
    sa.Column('product_name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('product_category', sa.VARCHAR(length=50), nullable=True),
    sa.Column('max_period_month', sa.INTEGER(), nullable=False),
    sa.Column('interest_month', sa.FLOAT(), nullable=False),
    sa.Column('service_fees', sa.FLOAT(), nullable=False),
    sa.Column('processing_fees', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('product_id'),
    sa.UniqueConstraint('product_name')
    )
    op.create_table('transaction',
    sa.Column('txn_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('narrative_beneficiary', sa.VARCHAR(length=150), nullable=False),
    sa.Column('CR_DR', sa.VARCHAR(length=10), nullable=False),
    sa.Column('transaction_purpose', sa.VARCHAR(length=50), nullable=False),
    sa.Column('credit_id', sa.VARCHAR(length=20), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('cr_id', sa.INTEGER(), nullable=True),
    sa.Column('product_id', sa.INTEGER(), nullable=True),
    sa.Column('customer_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['cr_id'], ['credit.cr_id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('txn_id')
    )
    op.create_table('guarantor',
    sa.Column('grnt_id', sa.INTEGER(), nullable=False),
    sa.Column('amount_guaranteed', sa.FLOAT(), nullable=False),
    sa.Column('guarantor_member_id', sa.VARCHAR(length=20), nullable=False),
    sa.Column('guarantor_lastname', sa.VARCHAR(length=50), nullable=False),
    sa.Column('guarantor_firstname', sa.VARCHAR(length=50), nullable=False),
    sa.Column('guarantor_email', sa.VARCHAR(length=50), nullable=False),
    sa.Column('guarantor_contact', sa.INTEGER(), nullable=False),
    sa.Column('credit_id', sa.INTEGER(), nullable=False),
    sa.Column('cr_id', sa.INTEGER(), nullable=True),
    sa.Column('customer_id', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), nullable=False),
    sa.Column('applicant_member_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['cr_id'], ['credit.cr_id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], ),
    sa.PrimaryKeyConstraint('grnt_id')
    )
    op.create_table('customer',
    sa.Column('customer_id', sa.INTEGER(), nullable=False),
    sa.Column('member_id', sa.VARCHAR(length=20), nullable=True),
    sa.Column('lastname', sa.VARCHAR(length=30), nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=30), nullable=False),
    sa.Column('othernames', sa.VARCHAR(length=30), nullable=True),
    sa.Column('email', sa.VARCHAR(length=60), nullable=False),
    sa.Column('contact', sa.INTEGER(), nullable=True),
    sa.Column('dateofbirth', sa.VARCHAR(length=20), nullable=True),
    sa.Column('gender', sa.VARCHAR(length=20), nullable=True),
    sa.Column('identification', sa.VARCHAR(length=20), nullable=False),
    sa.Column('nationality', sa.VARCHAR(length=50), nullable=True),
    sa.Column('country_of_residence', sa.VARCHAR(length=50), nullable=True),
    sa.Column('membership_status', sa.VARCHAR(length=40), nullable=True),
    sa.Column('task_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.task_id'], ),
    sa.PrimaryKeyConstraint('customer_id'),
    sa.UniqueConstraint('member_id')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=20), nullable=True),
    sa.Column('firstname', sa.VARCHAR(length=30), nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=30), nullable=False),
    sa.Column('email', sa.VARCHAR(length=15), nullable=False),
    sa.Column('password', sa.VARCHAR(length=15), nullable=False),
    sa.Column('task_id', sa.INTEGER(), nullable=True),
    sa.Column('customer_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.task_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('task',
    sa.Column('task_id', sa.INTEGER(), nullable=False),
    sa.Column('task_name', sa.VARCHAR(length=30), nullable=False),
    sa.Column('task_desc', sa.VARCHAR(length=200), nullable=True),
    sa.PrimaryKeyConstraint('task_id'),
    sa.UniqueConstraint('task_name')
    )
    op.create_table('creditor',
    sa.Column('cr_id', sa.INTEGER(), nullable=False),
    sa.Column('credit_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('credit_amount', sa.FLOAT(), nullable=False),
    sa.Column('repayment_period', sa.INTEGER(), nullable=True),
    sa.Column('member_cr_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('credit_interest', sa.FLOAT(), nullable=False),
    sa.Column('credit_processing_fee', sa.FLOAT(), nullable=False),
    sa.Column('credit_service_fee', sa.FLOAT(), nullable=False),
    sa.Column('monthly_repayment', sa.FLOAT(), nullable=False),
    sa.Column('repayment_amount', sa.FLOAT(), nullable=False),
    sa.Column('credit_product_name', sa.VARCHAR(length=60), nullable=True),
    sa.Column('product_id', sa.INTEGER(), nullable=True),
    sa.Column('customer_id', sa.INTEGER(), nullable=True),
    sa.Column('physical_address', sa.VARCHAR(length=100), nullable=True),
    sa.Column('city', sa.VARCHAR(length=60), nullable=True),
    sa.Column('employment_address', sa.VARCHAR(length=60), nullable=False),
    sa.Column('employment_contact', sa.INTEGER(), nullable=True),
    sa.Column('employment_email', sa.VARCHAR(length=50), nullable=True),
    sa.Column('kin_name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('kin_contact', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=10), nullable=False),
    sa.Column('approver', sa.VARCHAR(length=10), nullable=True),
    sa.Column('step', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ),
    sa.PrimaryKeyConstraint('cr_id'),
    sa.UniqueConstraint('credit_id')
    )
    op.create_table('note',
    sa.Column('notes_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('creditor_id', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.VARCHAR(length=500), nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), nullable=True),
    sa.Column('credit_id', sa.VARCHAR(length=10), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['creditor_id'], ['credit.cr_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('notes_id')
    )
    op.create_table('credit',
    sa.Column('cr_id', sa.INTEGER(), nullable=False),
    sa.Column('credit_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('credit_amount', sa.FLOAT(), nullable=False),
    sa.Column('repayment_period', sa.INTEGER(), nullable=True),
    sa.Column('member_cr_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('credit_interest', sa.FLOAT(), nullable=False),
    sa.Column('credit_processing_fee', sa.FLOAT(), nullable=False),
    sa.Column('credit_service_fee', sa.FLOAT(), nullable=False),
    sa.Column('monthly_repayment', sa.FLOAT(), nullable=False),
    sa.Column('repayment_amount', sa.FLOAT(), nullable=False),
    sa.Column('credit_product_name', sa.VARCHAR(length=60), nullable=True),
    sa.Column('product_id', sa.INTEGER(), nullable=True),
    sa.Column('customer_id', sa.INTEGER(), nullable=True),
    sa.Column('physical_address', sa.VARCHAR(length=100), nullable=True),
    sa.Column('city', sa.VARCHAR(length=60), nullable=True),
    sa.Column('employment_address', sa.VARCHAR(length=60), nullable=False),
    sa.Column('employment_contact', sa.INTEGER(), nullable=True),
    sa.Column('employment_email', sa.VARCHAR(length=50), nullable=True),
    sa.Column('kin_name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('Kin_contact', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=10), nullable=False),
    sa.Column('step', sa.INTEGER(), nullable=True),
    sa.Column('approver', sa.TEXT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ),
    sa.PrimaryKeyConstraint('cr_id'),
    sa.UniqueConstraint('credit_id')
    )
    # ### end Alembic commands ###
